
Game.tooltip.update = function () {
    var X = 0;
    var Y = 0;
    var width = this.tt.offsetWidth;
    var height = this.tt.offsetHeight;
    if (this.origin == 'store') {
        X = Game.windowW - 332 - width;
        Y = Game.mouseY - 32;
        if (Game.onCrate) Y = Game.onCrate.getBoundingClientRect().top - 42;
        Y = Math.max(0, Math.min(Game.windowH - height - 44, Y));
        /*this.tta.style.right='308px';//'468px';
        this.tta.style.left='auto';
        if (Game.onCrate) Y=Game.onCrate.getBoundingClientRect().top-2;
        this.tta.style.top=Math.max(0,Math.min(Game.windowH-this.tt.clientHeight-64,Y-48))+'px';*/
    }
    else {
        if (Game.onCrate) {
            var rect = Game.onCrate.getBoundingClientRect();
            rect = { left: rect.left, top: rect.top, right: rect.right, bottom: rect.bottom };
            if (rect.left == 0 && rect.top == 0)//if we get that bug where we get stuck in the top-left, move to the mouse (REVISION : just do nothing)
            { return false;/*rect.left=Game.mouseX-24;rect.right=Game.mouseX+24;rect.top=Game.mouseY-24;rect.bottom=Game.mouseY+24;*/ }
            if (this.origin == 'left') {
                X = rect.left - width - 16;
                Y = rect.top + (rect.bottom - rect.top) / 2 - height / 2 - 38;
                Y = Math.max(0, Math.min(Game.windowH - height - 19, Y));
                if (X < 0) X = rect.right;
            }
            else {
                X = rect.left + (rect.right - rect.left) / 2 - width / 2 - 8;
                Y = rect.top - height - 48;
                X = Math.max(0, Math.min(Game.windowW - width - 16, X));
                if (Y < 0) Y = rect.bottom - 32;
            }
        }
        else if (this.origin == 'bottom-right') {
            X = Game.mouseX + 8;
            Y = Game.mouseY - 32;
            X = Math.max(0, Math.min(Game.windowW - width - 16, X));
            Y = Math.max(0, Math.min(Game.windowH - height - 64, Y));
        }
        else if (this.origin == 'bottom') {
            X = Game.mouseX - width / 2 - 8;
            Y = Game.mouseY + 24;
            X = Math.max(0, Math.min(Game.windowW - width - 16, X));
            Y = Math.max(0, Math.min(Game.windowH - height - 64, Y));
        }
        else if (this.origin == 'left') {
            X = Game.mouseX - width - 24;
            Y = Game.mouseY - height / 2 - 8;
            X = Math.max(0, Math.min(Game.windowW - width - 16, X));
            Y = Math.max(0, Math.min(Game.windowH - height - 64, Y));
        }
        else if (this.origin == 'this' && this.from) {
            var rect = this.from.getBoundingClientRect();
            X = (rect.left + rect.right) / 2 - width / 2 - 8;
            Y = (rect.top) - this.tt.clientHeight - 48;
            X = Math.max(0, Math.min(Game.windowW - width - 16, X));
            //Y=Math.max(0,Math.min(Game.windowH-this.tt.clientHeight-64,Y));
            if (Y < 0) Y = (rect.bottom - 24);
            if (Y + height + 40 > Game.windowH) {
                X = rect.right + 8;
                Y = rect.top + (rect.bottom - rect.top) / 2 - height / 2 - 38;
                Y = Math.max(0, Math.min(Game.windowH - height - 19, Y));
            }
        }
        else {
            X = Game.mouseX - width / 2 - 8;
            Y = Game.mouseY - height - 32;
            X = Math.max(0, Math.min(Game.windowW - width - 16, X));
            Y = Math.max(0, Math.min(Game.windowH - height - 64, Y));
        }
    }
    this.tta.style.left = X + 'px';
    this.tta.style.right = 'auto';
    this.tta.style.top = Y + 'px';
    this.tta.style.bottom = 'auto';
    if (this.shouldHide) { this.hide(); this.shouldHide = 0; }
    else if (Game.drawT % 10 == 0 && typeof (this.text) === 'function') {
        var text = this.text();
        if (text == '') this.tta.style.opacity = '0';
        else {
            this.tt.innerHTML = unescape(text);
            this.tta.style.opacity = '1';
        }
    }
}